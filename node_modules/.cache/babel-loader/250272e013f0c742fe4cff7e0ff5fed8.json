{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProject\\\\Accordion\\\\src\\\\accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { questions } from \"./App\";\nimport \"./index.css\";\nimport MyAccordion from \"./myAccordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Accordion = () => {\n  _s();\n\n  const [data, setData] = useState(questions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React JS Interview Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), data.map(curElem => {\n          const {\n            id\n          } = curElem;\n          return /*#__PURE__*/_jsxDEV(MyAccordion, { ...curElem\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Accordion, \"CgpsCeNia8A2yZ4947PBZu+Yi2Q=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["E:/ReactProject/Accordion/src/accordion.js"],"names":["React","useState","questions","MyAccordion","Accordion","data","setData","map","curElem","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACC,SAAD,CAAhC;AAEA,sBACI;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQG,IAAI,CAACE,GAAL,CAAUC,OAAD,IAAa;AAClB,gBAAM;AAAEC,YAAAA;AAAF,cAASD,OAAf;AACA,8BAAO,QAAC,WAAD,OAA0BA;AAA1B,aAAkBC,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAHD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CAnBD;;GAAML,S;;KAAAA,S;AAqBN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { questions } from \"./App\";\r\nimport \"./index.css\";\r\nimport MyAccordion from \"./myAccordion\";\r\n\r\nconst Accordion = () => {\r\n\r\n    const [data, setData] = useState(questions);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"main-div\">\r\n                <div className=\"center-div\">\r\n                    <h1>React JS Interview Question</h1>\r\n                    {\r\n                        data.map((curElem) => {\r\n                            const { id } = curElem;\r\n                            return <MyAccordion key={id} {...curElem} />\r\n                        })\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}